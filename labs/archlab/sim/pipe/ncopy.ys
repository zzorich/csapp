#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
# Loop header
	xorq %rax,%rax		# count = 0;
    iaddq $-2, %rdx
    jmp test
Loop:	mrmovq (%rdi), %r10	# read val from src...
    mrmovq 8(%rdi), %r11
    mrmovq 16(%rdi), %r12
    iaddq $24, %rdi
	andq %r10, %r10		# val <= 0?
	rmmovq %r10, (%rsi)	# ...and store it to dst
    jle countAddTwo
    iaddq $1, %rax
countAddTwo:
    andq %r11, %r11
	rmmovq %r11, 8(%rsi)	# ...and store it to dst
    jle countAddOne
    iaddq $1, %rax
countAddOne:
    andq %r12, %r12
    rmmovq %r12, 16(%rsi)
    jle countAddZero
    iaddq $1, %rax
countAddZero:
    iaddq $24, %rsi
    iaddq $-3, %rdx
test:
	jg Loop			# if so, goto Loop:
    jne rest 
    mrmovq (%rdi), %r10
    mrmovq 8(%rdi), %r11
    andq %r10, %r10
    rmmovq %r10, (%rsi)
    jle testr11
    iaddq 1, %rax
testr11:
    andq %r11, %r11
    rmmovq %r11, 8(%rsi)
    jle Done
    iaddq 1, %rax
    jmp Done

rest:
    iaddq 1, %rdx
    jne Done
    mrmovq (%rdi), %r10
    andq %r10, %r10
    rmmovq %r10, (%rsi)
    jle Done
    iaddq 1, %rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
